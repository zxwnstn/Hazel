정점정보를 보내고, 어떤 쉐이더를 이용해서 스크린위에 띄우는 함수를 drawCall이라고 한다.

큐브를 3차원에 그려내는 것은, 버텍스 정보, 즉 버텍스 어레이(버텍스 버퍼와 인덱스 버퍼를 담는)와 쉐이더만 있으면 된다. 그런데 그것을 어떻게 볼수 있을까? 그렇게 정점으로 부터 만들어진 3차원상의 도형을 어떻게 출력시킬지 담당하는 것이 카메라 시스템이다.

개념적인 카메라를 떠나서 프로그램에서 카메라는 단순하게 projection matrix와 view matrix일 뿐이다. 

도형을 출력하기 위한 부가정보는 무엇일까?
일단 도형의 실제 좌표가 필요하다. 또한 질감을 표현하는 material 정보도 필요하다.
또한 환경(environmental)정보도 필요다. 빛은 어떻게 오는가? 광원이 무엇인가

2가지로 집중해보자. 
1. 환경(environment) - 카메라도 환경에 기반한다.
2. 객체(그려질 대상)

카메라를 포함한 환경과 객체가 준비되어야 그제서야 씬을 만들어 낼수 있다. 씬이란 단순히 카메라를 통한 상이다.

일단 우리는 커맨드 큐를 만들것이다. 커맨드 큐에 모든 정보가 담긴(submit)후에야 씬이 만들어 진다.
BeginScene은 커맨드 큐의 시작점이다. BeginScene으로 부터 그려질 대상의 모든 정보를 정의하고, 담는다. 
또한 EndScene으로 과정을 끝낸다. 그런 후에 drawcall을 부른다.  

Shader는 material에 포함된다.Meterial은 마치 mesh처럼 될것이다(?)(Material will be like a mesh will have a material) Materail > Mesh

다음시간에 카메라와 projection
